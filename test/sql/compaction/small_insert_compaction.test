# name: test/sql/compaction/small_insert_compaction.test
# description: test ducklake compaction of consecutive small inserts
# group: [ducklake]

require ducklake

require parquet

statement ok
ATTACH 'ducklake:__TEST_DIR__/ducklake_compaction.db' AS ducklake (DATA_PATH '__TEST_DIR__/ducklake_compaction_files', METADATA_CATALOG 'xx')

# FIXME:
statement ok
SET threads=1

# snapshot 1
statement ok
CREATE TABLE ducklake.test(i INTEGER);

# snapshot 2
statement ok
CREATE TABLE ducklake.test2(i INTEGER);

# snapshot 3
statement ok
INSERT INTO ducklake.test VALUES (1);

# snapshot 4: random change that does not modify the "test" table
statement ok
INSERT INTO ducklake.test2 VALUES (42);

# snapshot 5
statement ok
INSERT INTO ducklake.test VALUES (2);

# snapshot 6
statement ok
INSERT INTO ducklake.test VALUES (3);

# snapshot 7
statement ok
INSERT INTO ducklake.test VALUES (4);

# snapshot 8
statement ok
INSERT INTO ducklake.test VALUES (5);

query I
SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_compaction_files/*')
----
6

query III
SELECT snapshot_id, rowid, * FROM ducklake.test ORDER BY ALL
----
3	0	1
5	1	2
6	2	3
7	3	4
8	4	5

statement ok
CALL ducklake_merge_adjacent_files('ducklake');

# files are not immediately deleted - but are added to the deletion queue
# we actually gain a file here
query I
SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_compaction_files/*')
----
7

# force clean-up of the files
# statement ok
# CALL ducklake_cleanup_old_files(older_than => interval '0 days');

# now the files are gone
# query I
# SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_compaction_files/*')
# ----
# 1

# verify correct behavior when operating on the compacted file
# time travel
query I
SELECT * FROM ducklake.test AT (VERSION => 3)
----
1

query I
SELECT * FROM ducklake.test AT (VERSION => 4)
----
1


query I
SELECT * FROM ducklake.test AT (VERSION => 5)
----
1
2

# reading snapshot id and row id
query III
SELECT snapshot_id, rowid, * FROM ducklake.test ORDER BY ALL
----
3	0	1
5	1	2
6	2	3
7	3	4
8	4	5

# table insertions function
query II
SELECT rowid, * FROM ducklake_table_insertions('ducklake', 'test', 0, 3);
----
0	1

query II
SELECT rowid, * FROM ducklake_table_insertions('ducklake', 'test', 0, 4);
----
0	1

query II
SELECT rowid, * FROM ducklake_table_insertions('ducklake', 'test', 0, 6);
----
0	1
1	2
2	3

query II
SELECT rowid, * FROM ducklake_table_insertions('ducklake', 'test', 0, 9);
----
0	1
1	2
2	3
3	4
4	5
